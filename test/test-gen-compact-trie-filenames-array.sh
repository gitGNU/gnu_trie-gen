#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Trie-Gen.
# 
# Trie-Gen is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Trie-Gen is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Trie-Gen.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T gen-compact-trie-filenames-array
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L gen-compact-trie-filenames-array.old <(echo \
'$ print() { printf '\''%s\n'\'' "$@"; }
$ printc() { awk '\''{ printf("%c\n", strtonum("0x" $1)) }'\'' <<< "$1"; }
$ trie0() { set -o pipefail && ../src/trie "$@" 2>&1|sed -r '\''s|^#|\\\0|'\''; }
$ ../src/trie --attrs --dots --gen=compact --output=trie --trie=array < filenames.txt
[1,'\''c'\''] {
.   "c++py-tree-demo/" [0,"c++py-tree-demo",'\''/'\'',[3,'\''c'\'']] {
.   .   ".src-" [15,"c++py-tree-demo.src",'\''-'\'',[2,'\''f'\'']] {
.   .   .   "dirs" [19,"c++py-tree-demo.srcdir",'\''s'\'',[0]]: "c++py-tree-demo/.src-dirs"
.   .   .   "files" [19,"c++py-tree-demo.srcfile",'\''s'\'',[0]]: "c++py-tree-demo/.src-files"
.   .   }
.   .   "bin.patch" [15,"c++py-tree-demobin.patc",'\''h'\'',[0]]: "c++py-tree-demo/bin.patch"
.   .   "c++py" [15,"c++py-tree-democ++p",'\''y'\'',[2,'\''/'\'']] {
.   .   .   "-tree" [19,"c++py-tree-democ++p-tre",'\''e'\'',[2,'\''.'\'']] {
.   .   .   .   "-" [23,"c++py-tree-democ++p-tre",'\''-'\'',[3,'\''r'\'']] {
.   .   .   .   .   "author.txt" [23,"c++py-tree-democ++p-treauthor.tx",'\''t'\'',[0]]: "c++py-tree-demo/c++py-tree-author.txt"
.   .   .   .   .   "demo.txt" [23,"c++py-tree-democ++p-tredemo.tx",'\''t'\'',[0]]: "c++py-tree-demo/c++py-tree-demo.txt"
.   .   .   .   .   "readme." [23,"c++py-tree-democ++p-trereadme",'\''.'\'',[2,'\''t'\'']] {
.   .   .   .   .   .   "pdf" [29,"c++py-tree-democ++p-trereadmepd",'\''f'\'',[0]]: "c++py-tree-demo/c++py-tree-readme.pdf"
.   .   .   .   .   .   "t" [29,"c++py-tree-democ++p-trereadme",'\''t'\'',[2,'\''x'\'']] {
.   .   .   .   .   .   .   "ex" [29,"c++py-tree-democ++p-trereadmee",'\''x'\'',[0]]: "c++py-tree-demo/c++py-tree-readme.tex"
.   .   .   .   .   .   .   "xt" [29,"c++py-tree-democ++p-trereadmex",'\''t'\'',[0]]: "c++py-tree-demo/c++py-tree-readme.txt"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   .   "." [23,"c++py-tree-democ++p-tre",'\''.'\'',[2,'\''t'\'']] {
.   .   .   .   .   "pdf" [23,"c++py-tree-democ++p-trepd",'\''f'\'',[0]]: "c++py-tree-demo/c++py-tree.pdf"
.   .   .   .   .   "t" [23,"c++py-tree-democ++p-tre",'\''t'\'',[2,'\''x'\'']] {
.   .   .   .   .   .   "ex" [23,"c++py-tree-democ++p-tree",'\''x'\'',[0]]: "c++py-tree-demo/c++py-tree.tex"
.   .   .   .   .   .   "xt" [23,"c++py-tree-democ++p-trex",'\''t'\'',[0]]: "c++py-tree-demo/c++py-tree.txt"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   .   "/" [19,"c++py-tree-democ++p",'\''/'\'',[4,'\''R'\'']] {
.   .   .   .   ".src-" [19,"c++py-tree-democ++p.src",'\''-'\'',[2,'\''f'\'']] {
.   .   .   .   .   "dirs" [23,"c++py-tree-democ++p.srcdir",'\''s'\'',[0]]: "c++py-tree-demo/c++py/.src-dirs"
.   .   .   .   .   "files" [23,"c++py-tree-democ++p.srcfile",'\''s'\'',[0]]: "c++py-tree-demo/c++py/.src-files"
.   .   .   .   }
.   .   .   .   "AUTHOR" [19,"c++py-tree-democ++pAUTHO",'\''R'\'',[0]]: "c++py-tree-demo/c++py/AUTHOR"
.   .   .   .   "Makefile" [19,"c++py-tree-democ++pMakefil",'\''e'\'',[0]]: "c++py-tree-demo/c++py/Makefile"
.   .   .   .   "README" [19,"c++py-tree-democ++pREADM",'\''E'\'',[0]]: "c++py-tree-demo/c++py/README"
.   .   .   }
.   .   }
.   }
}'
) -L gen-compact-trie-filenames-array.new <(
echo '$ print() { printf '\''%s\n'\'' "$@"; }'
print() { printf '%s\n' "$@"; } 2>&1 ||
echo 'command failed: print() { printf '\''%s\n'\'' "$@"; }'

echo '$ printc() { awk '\''{ printf("%c\n", strtonum("0x" $1)) }'\'' <<< "$1"; }'
printc() { awk '{ printf("%c\n", strtonum("0x" $1)) }' <<< "$1"; } 2>&1 ||
echo 'command failed: printc() { awk '\''{ printf("%c\n", strtonum("0x" $1)) }'\'' <<< "$1"; }'

echo '$ trie0() { set -o pipefail && ../src/trie "$@" 2>&1|sed -r '\''s|^#|\\\0|'\''; }'
trie0() { set -o pipefail && ../src/trie "$@" 2>&1|sed -r 's|^#|\\\0|'; } 2>&1 ||
echo 'command failed: trie0() { set -o pipefail && ../src/trie "$@" 2>&1|sed -r '\''s|^#|\\\0|'\''; }'

echo '$ ../src/trie --attrs --dots --gen=compact --output=trie --trie=array < filenames.txt'
../src/trie --attrs --dots --gen=compact --output=trie --trie=array < filenames.txt 2>&1 ||
echo 'command failed: ../src/trie --attrs --dots --gen=compact --output=trie --trie=array < filenames.txt'
)

